package terracotta.misc;

import java.io.IOException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;


public class Test {
	
	private static final Pattern PATTERN = Pattern.compile("^[a-zA-Z]+([0-9]+).*"); 

	public static void main(String... args) throws IOException{
//		for(int i=0; i<100000; i++){
//			long time = System.nanoTime();
//			String data1 = new String("0x3bbe61461a1b18d0b750b25d9fa1595f,'MCX01D_13050112_2938',1,1,1,1,1,1,1,1,0,'2013-05-01 00:00:00.009',0,'2013-05-01 00:00:00.000','11','00','413B','55','0AD8','2013-05-01 12:47:59.000','03','FF','  ','FFFF','','466974104424565','','','','','','','','FF','939644958               ','05','06','970***660','05','06','65535',65535,,,'65535',,'FF',65535,,,'00','03','FFFF','351822059982110','466974700000830','','0000','0000','0000','0000','0000','0000','07','886983***686','05','05','8488',21111,466,97,'19546',886935***416,'05',21401,466,97,'FFFFFFFFFFFFFFFF',,'FF','FF','00000000','  ','3','8','2013-05-01 12:50:49.000','2013-05-01 12:48:08.000','F5B9','970***660','05','06','00','    ','FFFF','FF',0,'0970804097','05','04',0,0,0,0,0,0,'886935***374',0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,'  ','2013-05-01 12:47:59.000',,'',,,'00',0,0,0,0,0,0,0,0,0,'413B','55','0AD8','','FF','10','FF','00',0,0,'','  ','  ',,0,0,0,0,0,161,161.11,'01','0',0,'000000','08',,53,'1246',0,0,'FFFF','FFFFF','01','FF',436,62871450,'00','1','00','','  ','  ','FF','FF','FF','FF','FF','FF','FF',0,'2013-05-01 12:47:58.000',2,'00',,,,,,,,,'',,'      ','FFFF','FF','00','FF','FF','00','FF','2013-05-01 12:47:59.000','970***660','066208079','983***686','686791389688','970***660','066208079','','','',''");
//			String[] data1array = data1.split(",", -1);
//			System.out.println("split "+(System.nanoTime()-time));
//			System.out.println(data1array.length);
//
//			time = System.nanoTime();
//			String data2 = new String("0x3bbe61461a1b18d0b750b25d9fa1595f,'MCX01D_13050112_2938',1,1,1,1,1,1,1,1,0,'2013-05-01 12:48:08.000',0,'2013-05-01 12:48:04.000','11','00','413B','55','0AD8','2013-05-01 12:47:59.000','03','FF','  ','FFFF','','466974104424565','','','','','','','','FF','939644958               ','05','06','970***660','05','06','65535',65535,,,'65535',,'FF',65535,,,'00','03','FFFF','351822059982110','466974700000830','','0000','0000','0000','0000','0000','0000','07','886983***686','05','05','8488',21111,466,97,'19546',886935***416,'05',21401,466,97,'FFFFFFFFFFFFFFFF',,'FF','FF','00000000','  ','3','8','2013-05-01 12:50:49.000','2013-05-01 12:48:08.000','F5B9','970***660','05','06','00','    ','FFFF','FF',0,'0970804097','05','04',0,0,0,0,0,0,'886935***374',0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,'  ','2013-05-01 12:47:59.000',,'',,,'00',0,0,0,0,0,0,0,0,0,'413B','55','0AD8','','FF','10','FF','00',0,0,'','  ','  ',,0,0,0,0,0,161,161.11,'01','0',0,'000000','08',,53,'1246',0,0,'FFFF','FFFFF','01','FF',436,62871450,'00','1','00','','  ','  ','FF','FF','FF','FF','FF','FF','FF',0,'2013-05-01 12:47:58.000',2,'00',,,,,,,,,'',,'      ','FFFF','FF','00','FF','FF','00','FF','2013-05-01 12:47:59.000','970***660','066208079','983***686','686791389688','970***660','066208079','','','',''");
//			String[] data2array = StringUtils.splitPreserveAllTokens(data2,',');
//			System.out.println("splitPreserveAllTokens "+(System.nanoTime()-time));
//			System.out.println(data2array.length);
//		}
		
//		LineNumberReader  lnr = new LineNumberReader(new FileReader(new File("data/output3.csv")));
//		lnr.skip(Long.MAX_VALUE);
//		System.out.println(lnr.getLineNumber());
		
		Matcher m = PATTERN.matcher("CGW10000_1308090005.csv");
		if (m.find()) {
		    System.out.println(m.group(1));
		}
	}
}
